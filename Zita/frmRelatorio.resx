<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        y9m2hAAAAABJRU5ErkJggg==
</value>
  </data>
</root>